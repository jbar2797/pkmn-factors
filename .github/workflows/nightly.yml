name: run-nightly

on:
  workflow_dispatch:
  schedule:
    - cron: "17 07 * * *" # 07:17 UTC daily (adjust if you like)
  push:
    branches: [ "**" ]
    paths:
      - ".github/workflows/nightly.yml"
      - "src/pkmn_factors/**"

jobs:
  run-nightly:
    runs-on: ubuntu-latest

    # Use a TimescaleDB image so the extension exists
    services:
      postgres:
        image: timescale/timescaledb:2.14.2-pg15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pkmn
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30

    env:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/pkmn
      PGHOST: localhost
      PGPORT: "5432"
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: pkmn

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: |
          pipx install uv
          uv --version

      - name: Create virtualenv (.venv) and expose it to later steps
        run: |
          uv venv .venv
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for DB & create Timescale extension
        run: |
          for i in {1..60}; do
            if pg_isready -h "$PGHOST" -p "$PGPORT" -U "$PGUSER"; then
              break
            fi
            sleep 1
          done
          psql -h "$PGHOST" -U "$PGUSER" -d "$PGDATABASE" -c "CREATE EXTENSION IF NOT EXISTS timescaledb;"

      - name: Install deps (runtime + dev)
        run: |
          uv pip install -e ".[dev]"

      - name: Lint/Type/Test (sanity)
        run: |
          uv run ruff check .
          uv run black --check .
          uv run mypy src
          uv run pytest -q

      - name: Run migrations
        run: |
          PYTHONPATH=src uv run alembic upgrade head

      - name: Run nightly
        run: |
          uv run python -m pkmn_factors.ops.run_nightly \
            --universe data/universe_demo.csv \
            --model-version bhs_baseline_v2 \
            --horizon-days 90 \
            --persist \
            --refresh-cagg
